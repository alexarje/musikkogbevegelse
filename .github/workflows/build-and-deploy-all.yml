name: Build HTML & PDF and deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies (TeX Live full)
      run: |
        sudo apt-get update
        # Installing texlive-full ensures xindy/makeindex and all LaTeX packages are present.
        # NOTE: this is large and can add several minutes to the workflow runtime.
        sudo apt-get install -y texlive-full

    - name: Install Python deps
      run: |
        python -m pip install --upgrade pip
        if [ -f docs/requirements.txt ]; then
          pip install -r docs/requirements.txt
        else
          pip install sphinx myst-parser sphinx-rtd-theme
        fi

    - name: Build HTML
      run: |
        python -m sphinx -M html docs/source docs/build -a

    - name: Build PDF
      run: |
        python -m sphinx -M latexpdf docs/source docs/build -a
        ls -la docs/build/latex || true

    - name: Add PDF to site downloads
      run: |
        mkdir -p docs/build/html/_downloads
        if [ -f docs/build/latex/MusikkOgBevegelse.pdf ]; then
          cp docs/build/latex/MusikkOgBevegelse.pdf docs/build/html/_downloads/
        fi

    - name: Deploy to gh-pages (publish site)
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/build/html
        publish_branch: gh-pages
        keep_history: false
    - name: Create tag for release
      run: |
        # Configure git user and create a lightweight tag for this run
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        TAG="v${{ github.run_number }}"
        echo "Creating tag $TAG for release"
        git tag -a "$TAG" -m "CI release $TAG from $GITHUB_SHA" $GITHUB_SHA
        git push origin "$TAG"

    - name: Create GitHub Release with PDF
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ github.run_number }}"
        name: "MusikkOgBevegelse PDF (build ${{ github.run_number }})"
        files: docs/build/latex/MusikkOgBevegelse.pdf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
